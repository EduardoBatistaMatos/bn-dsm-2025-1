#!/bin/bash
# Define o interpretador do script como Bash.


SITE_URL="http://COLE O IP DA SUA INST츽NCIA"
# Vari치vel que armazena a URL do site que ser치 monitorado (endere칞o IP neste caso).


DISCORD_WEBHOOK_URL="COLE O IP DO SEU WEBHOOK"
# Vari치vel que armazena a URL do webhook do Discord, para onde ser칚o enviados os alertas.


LOG_FILE="/var/log/monitoramento.log"  # Corrigido o caminho para o diret칩rio completo
# Define o caminho do arquivo de log onde as informa칞칫es do monitoramento ser칚o armazenadas.

DATE=$(date "+%Y-%m-%d %H:%M:%S")
# Cria uma vari치vel que armazena a data e hora atual no formato "YYYY-MM-DD HH:MM:SS".

# Verifica se o site est치 acess칤vel
HTTP_STATUS=$(curl -s --head --request GET "$SITE_URL" | grep HTTP | awk '{print $2}')
# Utiliza o comando `curl` para enviar uma requisi칞칚o HEAD ao site especificado (sem baixar o conte칰do), capturando apenas o c칩digo HTTP retornado.
# O comando `grep HTTP` filtra a linha com o c칩digo HTTP, e `awk '{print $2}'` extrai o c칩digo HTTP (o n칰mero que aparece ap칩s "HTTP/1.1").

# Verifica se o c칩digo de status HTTP est치 entre 200 e 399 (site acess칤vel)
if [[ "$HTTP_STATUS" -ge 200 && "$HTTP_STATUS" -le 399 ]]; then
    echo "$DATE: O site est치 online." >> "$LOG_FILE"
    # Se o c칩digo HTTP for entre 200 e 399, o site est치 online.
    # A data e uma mensagem confirmando que o site est치 online s칚o gravadas no arquivo de log.
else
    echo "$DATE: O site est치 fora do ar! Enviando alerta para o Discord." >> "$LOG_FILE"
    # Se o c칩digo HTTP n칚o estiver entre 200 e 399, significa que o site est치 fora do ar.
    # A data e uma mensagem de erro s칚o gravadas no arquivo de log, informando que o site est치 fora do ar e que um alerta ser치 enviado.

    # Mensagem JSON para o Discord
    JSON_PAYLOAD=$(cat <<EOF
{
  "username": "Monitor de Site",
  "content": "游뚿 O site **$SITE_URL** est치 fora do ar! 游뚿"
}
EOF
)
# Cria a mensagem em formato JSON, que ser치 enviada ao Discord. A mensagem informa que o site est치 fora do ar e inclui a URL do site monitorado.

    # Envia a mensagem JSON ao Discord atrav칠s do webhook configurado, utilizando o comando `curl`.
    curl -H "Content-Type: application/json" -X POST -d "$JSON_PAYLOAD" "$DISCORD_WEBHOOK_URL"
    # O `Content-Type: application/json` especifica que o corpo da requisi칞칚o est치 no formato JSON.
    # O `-d "$JSON_PAYLOAD"` envia os dados JSON gerados.
    # A URL do webhook (armazenada na vari치vel `DISCORD_WEBHOOK_URL`) 칠 o destino da requisi칞칚o POST.
fi
